---
# BasedOnStyle:  LLVM
DisableFormat:   false  # Disables formatting completely.

AccessModifierOffset: -4
IndentAccessModifiers: false  # <clang-format 13
AlignAfterOpenBracket: Align
AlignConsecutiveMacros: true
AlignConsecutiveAssignments: true
AlignConsecutiveBitFields: true
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands:   Align
AlignTrailingComments: true  # OverEmptyLines 1 (clang-format >= 16)
AllowAllArgumentsOnNextLine: true
AllowAllConstructorInitializersOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortEnumsOnASingleLine: false
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false  # switch-case
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortLambdasOnASingleLine: All
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
AttributeMacros:
  - __capability
BinPackArguments: true
BinPackParameters: true
# BraceWrapping:
#   AfterCaseLabel:  false
#   AfterClass:      false
#   AfterControlStatement: Never
#   AfterEnum:       false
#   AfterFunction:   false
#   AfterNamespace:  false
#   AfterObjCDeclaration: false
#   AfterStruct:     false
#   AfterUnion:      false
#   AfterExternBlock: false
#   BeforeCatch:     false
#   BeforeElse:      false
#   BeforeLambdaBody: false
#   BeforeWhile:     false
#   IndentBraces:    false
#   SplitEmptyFunction: true
#   SplitEmptyRecord: true
#   SplitEmptyNamespace: true
BreakBeforeBinaryOperators: None
BreakBeforeConceptDeclarations: true
BreakBeforeBraces: Allman  # defined separated for each language at the bottom 
BreakBeforeInheritanceComma: false
BreakInheritanceList: AfterComma
BreakBeforeTernaryOperators: false
BreakConstructorInitializersBeforeComma: false
BreakConstructorInitializers: AfterColon
BreakAfterJavaFieldAnnotations: false
BreakStringLiterals: false
ColumnLimit:     0  # max line width (wrapping around) (A column limit of 0 means that there is no column limit. In this case, clang-format will respect the inputâ€™s line breaking decisions within statements unless they contradict other rules.)
CommentPragmas:  '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 0
Cpp11BracedListStyle: true
DeriveLineEnding: true  # TODO: make always LF (\n) (This option is deprecated. See DeriveLF and DeriveCRLF of LineEnding.)
DerivePointerAlignment: false
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IncludeBlocks:   Preserve
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0
    CaseSensitive:   false
IncludeIsMainRegex: '(Test)?$'
IncludeIsMainSourceRegex: ''
IndentCaseLabels: true
IndentCaseBlocks: false
IndentGotoLabels: true
# IndentPragmas:   false
IndentPPDirectives: None
IndentExternBlock: AfterExternBlock
IndentRequires:  false
IndentWidth:     4
IndentWrappedFunctionNames: false
InsertTrailingCommas: None
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
EmptyLineAfterAccessModifier: Leave
EmptyLineBeforeAccessModifier: Always
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
ObjCBinPackProtocolList: Auto
ObjCBlockIndentWidth: 2
ObjCBreakBeforeNestedBlockParam: true
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
# Penalties: Higher penalty values discourage line breaks, while lower values encourage line breaks
PenaltyBreakAssignment: 20                  # (clang-format 5)    The penalty for breaking around an assignment operator
PenaltyBreakBeforeFirstCallParameter: 19    # (clang-format 3.7)  The penalty for breaking a function call after call(
PenaltyBreakComment: 300                    # (clang-format 3.7)  The penalty for each line break introduced inside a comment
PenaltyBreakFirstLessLess: 120              # (clang-format 3.7)  The penalty for breaking before the first <<
# PenaltyBreakOpenParenthesis: 100          # (clang-format 14)   The penalty for breaking after (
# PenaltyBreakScopeResolution: 1000000      # (clang-format 18)   The penalty for breaking after ::
PenaltyBreakString: 1000                    # (clang-format 3.7)  The penalty for each line break introduced inside a string literal
PenaltyBreakTemplateDeclaration: 10         # (clang-format 7)    The penalty for breaking after template declaration
PenaltyExcessCharacter: 1000000             # (clang-format 3.7)  The penalty for each character outside of the column limit
PenaltyReturnTypeOnItsOwnLine: 200          # (clang-format 3.7)  Penalty for putting the return type of a function onto its own line
PenaltyIndentedWhitespace: 0                # (clang-format 12)   Penalty for each character of whitespace indentation (counted relative to leading non-whitespace column)
PointerAlignment: Right
ReflowComments:  true
SeparateDefinitionBlocks: Always
SortIncludes:    CaseInsensitive 
SortJavaStaticImport: Before
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceAroundPointerQualifiers: Default
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: 1
SpacesInAngles:  false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpaceBeforeSquareBrackets: false
BitFieldColonSpacing: Both
Standard:        Latest
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth:        4
UseCRLF:         false
UseTab:          Never
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
  - NS_SWIFT_NAME
  - CF_SWIFT_NAME
---
Language:        Cpp
BreakBeforeBraces: Allman
---
Language:        ObjC
BreakBeforeBraces: Attach
---
Language:        Proto
BreakBeforeBraces: Attach
IndentWidth:     2
